make_nitf_driver="echo 'skipping nitf driver installation'"

AC_ARG_WITH(nitf-home,
            [  --with-nitf-home=HOME		Compile with HOME],
            ok=${withval},
            ok="no")
if test "${ok}" != "no" && test "${ok}" != "yes" && test -n "${ok}"
then
    AC_MSG_RESULT(setting nitf home... ${ok})
    link_nitf_libpath="-L${ok}/lib"
    cxx_nitf_includes="-I${ok}/include"
    nitf_home_defined="yes"
    make_nitf_driver="echo 'skipping nitf driver installation'"
fi


AC_ARG_ENABLE(nitf,
                [  --enable-nitf  		Turn on NITF ],
            ok=${enableval},
            ok="yes")

if test "${ok}" = "no"
then
    AC_MSG_RESULT(disabling nitf...)
else
    AC_MSG_RESULT(enabling nitf...)
    link_nitf_libs="-lnitf-c"
    cxx_nitf_defs=""
    
    # If home was not defined then check if nitf is installed
    if test "${nitf_home_defined}" != "yes"
    then
        # Try this, if its there, use it, else use the driver
        link_nitf_libpath="-L${here}/../drivers/nitf/lib/${target}/${lib_dir}"
        cxx_nitf_includes="-I${here}/../drivers//nitf/include"
	    build_nitf="true"
        make_nitf_driver="make nitf_driver"
	    AC_MSG_RESULT(using svn dependency nitf driver...)
    else
        AC_MSG_RESULT(nitf includes directory... ${cxx_nitf_includes})
        AC_MSG_RESULT(nitf library directory... ${link_nitf_libpath})
    fi
fi

AC_SUBST(link_nitf_libs)
AC_SUBST(link_nitf_libpath)
AC_SUBST(cxx_nitf_defs)
AC_SUBST(cxx_nitf_includes)
AC_SUBST(make_nitf_driver)

make_cgm_driver="echo 'skipping cgm driver installation'"

AC_ARG_WITH(cgm-home,
            [  --with-cgm-home=HOME		Compile with HOME],
            ok=${withval},
            ok="no")
if test "${ok}" != "no" && test "${ok}" != "yes" && test -n "${ok}"
then
    AC_MSG_RESULT(setting cgm home... ${ok})
    link_cgm_libpath="-L${ok}/lib"
    cxx_cgm_includes="-I${ok}/include"
    cgm_home_defined="yes"
    make_cgm_driver="echo 'skipping cgm driver installation'"
fi


AC_ARG_ENABLE(cgm,
                [  --enable-cgm  		Turn on CGM ],
            ok=${enableval},
            ok="yes")

if test "${ok}" = "no"
then
    AC_MSG_RESULT(disabling cgm...)
else
    AC_MSG_RESULT(enabling cgm...)
    link_cgm_libs="-lcgm-c"
    cxx_cgm_defs=""
    
    # If home was not defined then check if cgm is installed
    if test "${cgm_home_defined}" != "yes"
    then
        # Try this, if its there, use it, else use the driver
        link_cgm_libpath="-L${here}/../drivers/cgm/lib/${target}/${lib_dir}"
        cxx_cgm_includes="-I${here}/../drivers/cgm/include"
	    build_cgm="true"
        make_cgm_driver="make cgm_driver"
	    AC_MSG_RESULT(using svn dependency cgm driver...)
    else
        AC_MSG_RESULT(cgm includes directory... ${cxx_cgm_includes})
        AC_MSG_RESULT(cgm library directory... ${link_cgm_libpath})
    fi
fi


AC_SUBST(link_cgm_libs)
AC_SUBST(link_cgm_libpath)
AC_SUBST(cxx_cgm_defs)
AC_SUBST(cxx_cgm_includes)
AC_SUBST(make_cgm_driver)
