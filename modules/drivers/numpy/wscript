import os, sys
from os.path import join, exists
from distutils import sysconfig
from waflib import Options
from waflib.TaskGen import feature, before, task_gen

build = distclean = lambda x: None

def options(opt):
    opt.add_option('--disable-numpy', action='store_false', dest='enable_numpy', default=True,
                   help='Turn off Numpy C headers/libs')


def find_python_lib():
    # In certain environments, we need link against libpython
    # as well as npymath.
    # `INSTSTONAME` is the closest way I can figure to ask Python
    # what this is called.
    python_lib = sysconfig.get_config_var('INSTSONAME')

    # It returns something like `libpython3.7m.so.1.0`,
    # or None on Windows, so we need to clean it up before asking
    # waf to link against it.
    if python_lib.startswith('lib'):
        python_lib = python_lib[3:]
    extension_index = python_lib.find('.so')
    if extension_index != -1:
        python_lib = python_lib[:extension_index]
    if python_lib is None:
        python_lib = ""

    return python_lib


def configure(conf):
    if Options.options.enable_numpy and \
        hasattr(Options.options, 'python') and Options.options.python:
        # a little magic borrowed from python-config and extended for numpy and -L flags
        try:
            import numpy.distutils
            import os

            libpython = find_python_lib()

            np_info = numpy.distutils.misc_util.get_info('npymath')

            warningmessage = ""
            if(len(np_info['include_dirs']) > 1):
                warningmessage += " More than one include directory reported by Numpy.  Using first."
            if(len(np_info['library_dirs']) > 1):
                warningmessage += " More than one lib directory reported by Numpy.  Using first."

            inc_dir = np_info['include_dirs'][0]
            lib_dir = np_info['library_dirs'][0]

            conf.check(uselib_store='NUMPY',
                       use='PYEXT',
                       lib='npymath {0}'.format(libpython),
                       header_name=['Python.h','numpy/arrayobject.h'],
                       includes=inc_dir,
                       libpath=lib_dir,
                       msg='Checking for library numpy' + warningmessage,
                       mandatory=True)

            conf.undefine("HAVE_NUMPY_ARRAYOBJECT_H")
            conf.env['PY_HAVE_NUMPY'] = True
        except:
            conf.env['PY_HAVE_NUMPY'] = False
