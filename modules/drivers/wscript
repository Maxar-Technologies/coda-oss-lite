from waflib import Options
from os.path import join, exists

BLD_DIRS = 'pcre fftw zlib uuid expat sql'

def options(opt):
    opt.recurse(filter(lambda x: exists(join(opt.path.abspath(), x, 'wscript')),
                       BLD_DIRS.split()))

def configure(conf):
    conf.recurse(filter(lambda x: exists(join(conf.path.abspath(),x,'wscript')),
                        BLD_DIRS.split()))

def build(bld):
    bld.recurse(filter(lambda x: exists(join(bld.path.abspath(), x, 'wscript')),
                       BLD_DIRS.split()))

    variant = bld.env['VARIANT']
    env = bld.all_envs[variant]

    if env['install_source']:
        sourceNode = bld.path.make_node('source')
        bld(features = 'install_tgt',
            files = 'wscript',
            dir = bld.path,
            install_path = join('${PREFIX}', sourceNode.path_from(bld.path)),
            relative_trick=True,
            name='drivers_wscript')

def distclean(ctx):
    ctx.recurse(filter(lambda x: exists(join(ctx.path.abspath(), x, 'wscript')),
                       BLD_DIRS.split()))
